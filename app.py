# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1180, 746)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.gridLayout_window = QtWidgets.QGridLayout()
        self.gridLayout_window.setObjectName("gridLayout_window")
        self.horizontalLayout_plot = QtWidgets.QHBoxLayout()
        self.horizontalLayout_plot.setObjectName("horizontalLayout_plot")
        self.groupBox_input = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_input.setObjectName("groupBox_input")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_input)
        self.gridLayout.setObjectName("gridLayout")
        self.input = QtWidgets.QLabel(self.groupBox_input)
        self.input.setMinimumSize(QtCore.QSize(552, 556))
        self.input.setText("")
        self.input.setObjectName("input")
        self.gridLayout.addWidget(self.input, 0, 0, 1, 1)
        self.horizontalLayout_plot.addWidget(self.groupBox_input)
        self.groupBox_output = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_output.setObjectName("groupBox_output")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_output)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.output = QtWidgets.QLabel(self.groupBox_output)
        self.output.setEnabled(False)
        self.output.setMinimumSize(QtCore.QSize(552, 556))
        self.output.setText("")
        self.output.setPixmap(QtGui.QPixmap("icons/save-file.png"))
        self.output.setObjectName("output")
        self.gridLayout_2.addWidget(self.output, 0, 0, 1, 1)
        self.horizontalLayout_plot.addWidget(self.groupBox_output)
        self.gridLayout_window.addLayout(self.horizontalLayout_plot, 1, 0, 1, 1)
        self.gridLayout_Menu = QtWidgets.QGridLayout()
        self.gridLayout_Menu.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_Menu.setObjectName("gridLayout_Menu")
        self.EdgeDetection = QtWidgets.QGroupBox(self.centralwidget)
        self.EdgeDetection.setMinimumSize(QtCore.QSize(0, 65))
        self.EdgeDetection.setMaximumSize(QtCore.QSize(16777215, 65))
        self.EdgeDetection.setObjectName("EdgeDetection")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.EdgeDetection)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.pushButton_actionRoberts = QtWidgets.QPushButton(self.EdgeDetection)
        self.pushButton_actionRoberts.setEnabled(False)
        self.pushButton_actionRoberts.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/roberts.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionRoberts.setIcon(icon)
        self.pushButton_actionRoberts.setObjectName("pushButton_actionRoberts")
        self.horizontalLayout_6.addWidget(self.pushButton_actionRoberts)
        self.pushButton_actionSobel = QtWidgets.QPushButton(self.EdgeDetection)
        self.pushButton_actionSobel.setEnabled(False)
        self.pushButton_actionSobel.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/sobel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionSobel.setIcon(icon1)
        self.pushButton_actionSobel.setObjectName("pushButton_actionSobel")
        self.horizontalLayout_6.addWidget(self.pushButton_actionSobel)
        self.pushButton_actionScharr = QtWidgets.QPushButton(self.EdgeDetection)
        self.pushButton_actionScharr.setEnabled(False)
        self.pushButton_actionScharr.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/scharr.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionScharr.setIcon(icon2)
        self.pushButton_actionScharr.setObjectName("pushButton_actionScharr")
        self.horizontalLayout_6.addWidget(self.pushButton_actionScharr)
        self.pushButton_actionPrewitt = QtWidgets.QPushButton(self.EdgeDetection)
        self.pushButton_actionPrewitt.setEnabled(False)
        self.pushButton_actionPrewitt.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/prewwit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionPrewitt.setIcon(icon3)
        self.pushButton_actionPrewitt.setObjectName("pushButton_actionPrewitt")
        self.horizontalLayout_6.addWidget(self.pushButton_actionPrewitt)
        self.gridLayout_Menu.addWidget(self.EdgeDetection, 0, 4, 1, 1, QtCore.Qt.AlignBottom)
        self.Segmentation = QtWidgets.QGroupBox(self.centralwidget)
        self.Segmentation.setMinimumSize(QtCore.QSize(0, 65))
        self.Segmentation.setMaximumSize(QtCore.QSize(16777215, 65))
        self.Segmentation.setObjectName("Segmentation")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.Segmentation)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.pushButton_actionMulti_Otsu_Thresholding = QtWidgets.QPushButton(self.Segmentation)
        self.pushButton_actionMulti_Otsu_Thresholding.setEnabled(False)
        self.pushButton_actionMulti_Otsu_Thresholding.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/otsu.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionMulti_Otsu_Thresholding.setIcon(icon4)
        self.pushButton_actionMulti_Otsu_Thresholding.setObjectName("pushButton_actionMulti_Otsu_Thresholding")
        self.horizontalLayout_5.addWidget(self.pushButton_actionMulti_Otsu_Thresholding)
        self.pushButton_actionChan_Vese_Segmentation = QtWidgets.QPushButton(self.Segmentation)
        self.pushButton_actionChan_Vese_Segmentation.setEnabled(False)
        self.pushButton_actionChan_Vese_Segmentation.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/khanom-chan.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionChan_Vese_Segmentation.setIcon(icon5)
        self.pushButton_actionChan_Vese_Segmentation.setObjectName("pushButton_actionChan_Vese_Segmentation")
        self.horizontalLayout_5.addWidget(self.pushButton_actionChan_Vese_Segmentation)
        self.pushButton_actionMorphological_Snakes = QtWidgets.QPushButton(self.Segmentation)
        self.pushButton_actionMorphological_Snakes.setEnabled(False)
        self.pushButton_actionMorphological_Snakes.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/snake.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionMorphological_Snakes.setIcon(icon6)
        self.pushButton_actionMorphological_Snakes.setObjectName("pushButton_actionMorphological_Snakes")
        self.horizontalLayout_5.addWidget(self.pushButton_actionMorphological_Snakes)
        self.gridLayout_Menu.addWidget(self.Segmentation, 0, 3, 1, 1)
        self.Conversion = QtWidgets.QGroupBox(self.centralwidget)
        self.Conversion.setMinimumSize(QtCore.QSize(0, 65))
        self.Conversion.setMaximumSize(QtCore.QSize(16777215, 65))
        self.Conversion.setObjectName("Conversion")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.Conversion)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pushButton_actionRGB_to_Grayscale = QtWidgets.QPushButton(self.Conversion)
        self.pushButton_actionRGB_to_Grayscale.setEnabled(False)
        self.pushButton_actionRGB_to_Grayscale.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/grayscale.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionRGB_to_Grayscale.setIcon(icon7)
        self.pushButton_actionRGB_to_Grayscale.setObjectName("pushButton_actionRGB_to_Grayscale")
        self.horizontalLayout_4.addWidget(self.pushButton_actionRGB_to_Grayscale)
        self.pushButton_actionRGB_to_HSV = QtWidgets.QPushButton(self.Conversion)
        self.pushButton_actionRGB_to_HSV.setEnabled(False)
        self.pushButton_actionRGB_to_HSV.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/hsv.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionRGB_to_HSV.setIcon(icon8)
        self.pushButton_actionRGB_to_HSV.setObjectName("pushButton_actionRGB_to_HSV")
        self.horizontalLayout_4.addWidget(self.pushButton_actionRGB_to_HSV)
        self.gridLayout_Menu.addWidget(self.Conversion, 0, 2, 1, 1)
        self.Output = QtWidgets.QGroupBox(self.centralwidget)
        self.Output.setMinimumSize(QtCore.QSize(0, 65))
        self.Output.setMaximumSize(QtCore.QSize(16777215, 65))
        self.Output.setObjectName("Output")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.Output)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_actionSave_Output = QtWidgets.QPushButton(self.Output)
        self.pushButton_actionSave_Output.setEnabled(False)
        self.pushButton_actionSave_Output.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons/save_output.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionSave_Output.setIcon(icon9)
        self.pushButton_actionSave_Output.setObjectName("pushButton_actionSave_Output")
        self.horizontalLayout_3.addWidget(self.pushButton_actionSave_Output)
        self.pushButton_actionSave_As_Output = QtWidgets.QPushButton(self.Output)
        self.pushButton_actionSave_As_Output.setEnabled(False)
        self.pushButton_actionSave_As_Output.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icons/save_as_output.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionSave_As_Output.setIcon(icon10)
        self.pushButton_actionSave_As_Output.setObjectName("pushButton_actionSave_As_Output")
        self.horizontalLayout_3.addWidget(self.pushButton_actionSave_As_Output)
        self.pushButton_actionExport_As_Output = QtWidgets.QPushButton(self.Output)
        self.pushButton_actionExport_As_Output.setEnabled(False)
        self.pushButton_actionExport_As_Output.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icons/jpg.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionExport_As_Output.setIcon(icon11)
        self.pushButton_actionExport_As_Output.setObjectName("pushButton_actionExport_As_Output")
        self.horizontalLayout_3.addWidget(self.pushButton_actionExport_As_Output)
        self.pushButton_actionOutput_clear = QtWidgets.QPushButton(self.Output)
        self.pushButton_actionOutput_clear.setEnabled(False)
        self.pushButton_actionOutput_clear.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("icons/clear.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionOutput_clear.setIcon(icon12)
        self.pushButton_actionOutput_clear.setObjectName("pushButton_actionOutput_clear")
        self.horizontalLayout_3.addWidget(self.pushButton_actionOutput_clear)
        self.pushButton_actionUndo_Output = QtWidgets.QPushButton(self.Output)
        self.pushButton_actionUndo_Output.setEnabled(False)
        self.pushButton_actionUndo_Output.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("icons/undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionUndo_Output.setIcon(icon13)
        self.pushButton_actionUndo_Output.setObjectName("pushButton_actionUndo_Output")
        self.horizontalLayout_3.addWidget(self.pushButton_actionUndo_Output)
        self.pushButton_actionRedo_Output = QtWidgets.QPushButton(self.Output)
        self.pushButton_actionRedo_Output.setEnabled(False)
        self.pushButton_actionRedo_Output.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("icons/redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionRedo_Output.setIcon(icon14)
        self.pushButton_actionRedo_Output.setObjectName("pushButton_actionRedo_Output")
        self.horizontalLayout_3.addWidget(self.pushButton_actionRedo_Output)
        self.gridLayout_Menu.addWidget(self.Output, 0, 1, 1, 1)
        self.Source = QtWidgets.QGroupBox(self.centralwidget)
        self.Source.setMinimumSize(QtCore.QSize(65, 0))
        self.Source.setMaximumSize(QtCore.QSize(16777215, 65))
        self.Source.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.Source.setObjectName("Source")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.Source)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_actionOpen_Source = QtWidgets.QPushButton(self.Source)
        self.pushButton_actionOpen_Source.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("icons/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_actionOpen_Source.setIcon(icon15)
        self.pushButton_actionOpen_Source.setObjectName("pushButton_actionOpen_Source")
        self.horizontalLayout.addWidget(self.pushButton_actionOpen_Source)
        self.pushButton_actionExport_As_Source = QtWidgets.QPushButton(self.Source)
        self.pushButton_actionExport_As_Source.setEnabled(False)
        self.pushButton_actionExport_As_Source.setText("")
        self.pushButton_actionExport_As_Source.setIcon(icon11)
        self.pushButton_actionExport_As_Source.setObjectName("pushButton_actionExport_As_Source")
        self.horizontalLayout.addWidget(self.pushButton_actionExport_As_Source)
        self.pushButton_actionSource_clear = QtWidgets.QPushButton(self.Source)
        self.pushButton_actionSource_clear.setEnabled(False)
        self.pushButton_actionSource_clear.setText("")
        self.pushButton_actionSource_clear.setIcon(icon12)
        self.pushButton_actionSource_clear.setObjectName("pushButton_actionSource_clear")
        self.horizontalLayout.addWidget(self.pushButton_actionSource_clear)
        self.gridLayout_Menu.addWidget(self.Source, 0, 0, 1, 1)
        self.gridLayout_window.addLayout(self.gridLayout_Menu, 0, 0, 1, 1)
        self.gridLayout_4.addLayout(self.gridLayout_window, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1180, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuExport_As = QtWidgets.QMenu(self.menuFile)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("icons/export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuExport_As.setIcon(icon16)
        self.menuExport_As.setObjectName("menuExport_As")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuClear = QtWidgets.QMenu(self.menuEdit)
        self.menuClear.setIcon(icon12)
        self.menuClear.setObjectName("menuClear")
        self.menuConversion = QtWidgets.QMenu(self.menubar)
        self.menuConversion.setObjectName("menuConversion")
        self.menuSegmentation = QtWidgets.QMenu(self.menubar)
        self.menuSegmentation.setObjectName("menuSegmentation")
        self.menuEdge_Detection = QtWidgets.QMenu(self.menubar)
        self.menuEdge_Detection.setObjectName("menuEdge_Detection")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_Source = QtWidgets.QAction(MainWindow)
        self.actionOpen_Source.setIcon(icon15)
        self.actionOpen_Source.setObjectName("actionOpen_Source")
        self.actionSave_Output = QtWidgets.QAction(MainWindow)
        self.actionSave_Output.setEnabled(False)
        self.actionSave_Output.setIcon(icon9)
        self.actionSave_Output.setObjectName("actionSave_Output")
        self.actionExit = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("icons/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon17)
        self.actionExit.setObjectName("actionExit")
        self.actionExport_As_Source = QtWidgets.QAction(MainWindow)
        self.actionExport_As_Source.setEnabled(False)
        self.actionExport_As_Source.setIcon(icon11)
        self.actionExport_As_Source.setObjectName("actionExport_As_Source")
        self.actionExport_As_Output = QtWidgets.QAction(MainWindow)
        self.actionExport_As_Output.setEnabled(False)
        self.actionExport_As_Output.setIcon(icon11)
        self.actionExport_As_Output.setObjectName("actionExport_As_Output")
        self.actionUndo_Output = QtWidgets.QAction(MainWindow)
        self.actionUndo_Output.setEnabled(False)
        self.actionUndo_Output.setIcon(icon13)
        self.actionUndo_Output.setObjectName("actionUndo_Output")
        self.actionRedo_Output = QtWidgets.QAction(MainWindow)
        self.actionRedo_Output.setEnabled(False)
        self.actionRedo_Output.setIcon(icon14)
        self.actionRedo_Output.setObjectName("actionRedo_Output")
        self.actionSource_clear = QtWidgets.QAction(MainWindow)
        self.actionSource_clear.setEnabled(False)
        self.actionSource_clear.setIcon(icon12)
        self.actionSource_clear.setObjectName("actionSource_clear")
        self.actionOutput_clear = QtWidgets.QAction(MainWindow)
        self.actionOutput_clear.setEnabled(False)
        self.actionOutput_clear.setIcon(icon12)
        self.actionOutput_clear.setObjectName("actionOutput_clear")
        self.actionRGB_to_Grayscale = QtWidgets.QAction(MainWindow)
        self.actionRGB_to_Grayscale.setEnabled(False)
        self.actionRGB_to_Grayscale.setIcon(icon7)
        self.actionRGB_to_Grayscale.setObjectName("actionRGB_to_Grayscale")
        self.actionRGB_to_HSV = QtWidgets.QAction(MainWindow)
        self.actionRGB_to_HSV.setEnabled(False)
        self.actionRGB_to_HSV.setIcon(icon8)
        self.actionRGB_to_HSV.setObjectName("actionRGB_to_HSV")
        self.actionMulti_Otsu_Thresholding = QtWidgets.QAction(MainWindow)
        self.actionMulti_Otsu_Thresholding.setEnabled(False)
        self.actionMulti_Otsu_Thresholding.setIcon(icon4)
        self.actionMulti_Otsu_Thresholding.setObjectName("actionMulti_Otsu_Thresholding")
        self.actionChan_Vese_Segmentation = QtWidgets.QAction(MainWindow)
        self.actionChan_Vese_Segmentation.setEnabled(False)
        self.actionChan_Vese_Segmentation.setIcon(icon5)
        self.actionChan_Vese_Segmentation.setObjectName("actionChan_Vese_Segmentation")
        self.actionMorphological_Snakes = QtWidgets.QAction(MainWindow)
        self.actionMorphological_Snakes.setEnabled(False)
        self.actionMorphological_Snakes.setIcon(icon6)
        self.actionMorphological_Snakes.setObjectName("actionMorphological_Snakes")
        self.actionRoberts = QtWidgets.QAction(MainWindow)
        self.actionRoberts.setEnabled(False)
        self.actionRoberts.setIcon(icon)
        self.actionRoberts.setObjectName("actionRoberts")
        self.actionSobel = QtWidgets.QAction(MainWindow)
        self.actionSobel.setEnabled(False)
        self.actionSobel.setIcon(icon1)
        self.actionSobel.setObjectName("actionSobel")
        self.actionScharr = QtWidgets.QAction(MainWindow)
        self.actionScharr.setEnabled(False)
        self.actionScharr.setIcon(icon2)
        self.actionScharr.setObjectName("actionScharr")
        self.actionPrewitt = QtWidgets.QAction(MainWindow)
        self.actionPrewitt.setEnabled(False)
        self.actionPrewitt.setIcon(icon3)
        self.actionPrewitt.setObjectName("actionPrewitt")
        self.actionSave_As_Output = QtWidgets.QAction(MainWindow)
        self.actionSave_As_Output.setEnabled(False)
        self.actionSave_As_Output.setIcon(icon10)
        self.actionSave_As_Output.setObjectName("actionSave_As_Output")
        self.menuExport_As.addAction(self.actionExport_As_Source)
        self.menuExport_As.addAction(self.actionExport_As_Output)
        self.menuFile.addAction(self.actionOpen_Source)
        self.menuFile.addAction(self.actionSave_Output)
        self.menuFile.addAction(self.actionSave_As_Output)
        self.menuFile.addAction(self.menuExport_As.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuClear.addAction(self.actionSource_clear)
        self.menuClear.addAction(self.actionOutput_clear)
        self.menuEdit.addAction(self.menuClear.menuAction())
        self.menuEdit.addAction(self.actionUndo_Output)
        self.menuEdit.addAction(self.actionRedo_Output)
        self.menuConversion.addAction(self.actionRGB_to_Grayscale)
        self.menuConversion.addAction(self.actionRGB_to_HSV)
        self.menuSegmentation.addAction(self.actionMulti_Otsu_Thresholding)
        self.menuSegmentation.addAction(self.actionChan_Vese_Segmentation)
        self.menuSegmentation.addAction(self.actionMorphological_Snakes)
        self.menuEdge_Detection.addAction(self.actionRoberts)
        self.menuEdge_Detection.addAction(self.actionSobel)
        self.menuEdge_Detection.addAction(self.actionScharr)
        self.menuEdge_Detection.addAction(self.actionPrewitt)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuConversion.menuAction())
        self.menubar.addAction(self.menuSegmentation.menuAction())
        self.menubar.addAction(self.menuEdge_Detection.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox_input.setTitle(_translate("MainWindow", "Source"))
        self.groupBox_output.setTitle(_translate("MainWindow", "Output"))
        self.EdgeDetection.setTitle(_translate("MainWindow", "Edge Detection"))
        self.Segmentation.setTitle(_translate("MainWindow", "Segmentation"))
        self.Conversion.setTitle(_translate("MainWindow", "Conversion"))
        self.Output.setTitle(_translate("MainWindow", "Output"))
        self.Source.setTitle(_translate("MainWindow", "Source"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuExport_As.setStatusTip(_translate("MainWindow", "Export As image."))
        self.menuExport_As.setTitle(_translate("MainWindow", "Export As"))
        self.menuEdit.setStatusTip(_translate("MainWindow", "Edit"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuClear.setStatusTip(_translate("MainWindow", "Clear Menu"))
        self.menuClear.setTitle(_translate("MainWindow", "Clear"))
        self.menuConversion.setTitle(_translate("MainWindow", "Conversion"))
        self.menuSegmentation.setTitle(_translate("MainWindow", "Segmentation"))
        self.menuEdge_Detection.setTitle(_translate("MainWindow", "Edge Detection"))
        self.statusbar.setStatusTip(_translate("MainWindow", "Status Bar"))
        self.actionOpen_Source.setText(_translate("MainWindow", "Open Source"))
        self.actionOpen_Source.setStatusTip(_translate("MainWindow", "Open image."))
        self.actionOpen_Source.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_Output.setText(_translate("MainWindow", "Save Output"))
        self.actionSave_Output.setStatusTip(_translate("MainWindow", "Save image output."))
        self.actionSave_Output.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setStatusTip(_translate("MainWindow", "Exit the app."))
        self.actionExit.setShortcut(_translate("MainWindow", "Shift+F4"))
        self.actionExport_As_Source.setText(_translate("MainWindow", "Source"))
        self.actionExport_As_Source.setStatusTip(_translate("MainWindow", "Export as Source"))
        self.actionExport_As_Source.setShortcut(_translate("MainWindow", "Ctrl+Shift+I"))
        self.actionExport_As_Output.setText(_translate("MainWindow", "Output"))
        self.actionExport_As_Output.setStatusTip(_translate("MainWindow", "Export as Output"))
        self.actionExport_As_Output.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionUndo_Output.setText(_translate("MainWindow", "Undo Output"))
        self.actionUndo_Output.setStatusTip(_translate("MainWindow", "Undo Output image"))
        self.actionUndo_Output.setShortcut(_translate("MainWindow", "Ctrl+Shift+Z"))
        self.actionRedo_Output.setText(_translate("MainWindow", "Redo  Output"))
        self.actionRedo_Output.setStatusTip(_translate("MainWindow", "Redo Output image"))
        self.actionRedo_Output.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionSource_clear.setText(_translate("MainWindow", "Source"))
        self.actionSource_clear.setStatusTip(_translate("MainWindow", "Clear source image"))
        self.actionSource_clear.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionOutput_clear.setText(_translate("MainWindow", "Output"))
        self.actionOutput_clear.setStatusTip(_translate("MainWindow", "Clear output image"))
        self.actionOutput_clear.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.actionRGB_to_Grayscale.setText(_translate("MainWindow", "RGB to Grayscale"))
        self.actionRGB_to_Grayscale.setStatusTip(_translate("MainWindow", "Convert to grayscale the Source image"))
        self.actionRGB_to_Grayscale.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actionRGB_to_HSV.setText(_translate("MainWindow", "RGB to HSV"))
        self.actionRGB_to_HSV.setStatusTip(_translate("MainWindow", "Convert to hsv the Source image"))
        self.actionRGB_to_HSV.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionMulti_Otsu_Thresholding.setText(_translate("MainWindow", "Multi-Otsu Thresholding"))
        self.actionMulti_Otsu_Thresholding.setStatusTip(_translate("MainWindow", "Apply multi otsu thresholding to the image"))
        self.actionMulti_Otsu_Thresholding.setShortcut(_translate("MainWindow", "Ctrl+J"))
        self.actionChan_Vese_Segmentation.setText(_translate("MainWindow", "Chan-Vese Segmentation"))
        self.actionChan_Vese_Segmentation.setStatusTip(_translate("MainWindow", "Apply Chan Vese Segmentation to the image"))
        self.actionChan_Vese_Segmentation.setShortcut(_translate("MainWindow", "Ctrl+K"))
        self.actionMorphological_Snakes.setText(_translate("MainWindow", "Morphological Snakes"))
        self.actionMorphological_Snakes.setStatusTip(_translate("MainWindow", "Apply Morphological Snakes to the image"))
        self.actionMorphological_Snakes.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionRoberts.setText(_translate("MainWindow", "Roberts"))
        self.actionRoberts.setStatusTip(_translate("MainWindow", "Edge detection : Roberts "))
        self.actionRoberts.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSobel.setText(_translate("MainWindow", "Sobel"))
        self.actionSobel.setStatusTip(_translate("MainWindow", "Edge detection : Sobel "))
        self.actionSobel.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionScharr.setText(_translate("MainWindow", "Scharr"))
        self.actionScharr.setStatusTip(_translate("MainWindow", "Edge detection : Scharr "))
        self.actionScharr.setShortcut(_translate("MainWindow", "Ctrl+Ğ"))
        self.actionPrewitt.setText(_translate("MainWindow", "Prewitt"))
        self.actionPrewitt.setStatusTip(_translate("MainWindow", "Edge detection : Prewitt "))
        self.actionPrewitt.setShortcut(_translate("MainWindow", "Ctrl+Ü"))
        self.actionSave_As_Output.setText(_translate("MainWindow", "Save As Output"))
        self.actionSave_As_Output.setStatusTip(_translate("MainWindow", "Save image as output."))
        self.actionSave_As_Output.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))




